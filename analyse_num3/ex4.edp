real R = 0.3;  // Rayon du trou circulaire
int np = 100;   // Nombre de points pour approximer chaque bord

// Définition des frontières du carré unité [0,1] x [0,1]
border C1(t=0,1){ x=t; y=0; label=1; }  // Bas
border C2(t=0,1){ x=1; y=t; label=2; }  // Droite
border C3(t=0,1){ x=1-t; y=1; label=3; }  // Haut
border C4(t=0,1){ x=0; y=1-t; label=4; }  // Gauche

// Définition de la frontière intérieure (cercle au centre du carré)
border Cc(t=0,2*pi){ x = 0.5 + R*cos(t); y = 0.5 + R*sin(t); label=5; }  // Trou intérieur

// Construction du maillage du carré avec un trou circulaire
mesh Th = buildmesh(C1(np) + C2(np) + C3(np) + C4(np) + Cc(-100));

// Définition de l'espace d'éléments finis P1
fespace Vh(Th, P1);
Vh uh, vh;

func f = x * y; // Second membre

// Formulation variationnelle
problem Test(uh, vh) =
    int2d(Th)(dx(uh) * dx(vh) + dy(uh) * dy(vh) + uh * vh)
    - int2d(Th)(f * vh) 
    + on(1,2,3,4, uh=0)  // Conditions de Dirichlet sur le carré unité
    + on(5, uh=0);       // Condition de Dirichlet sur le trou (label 5)

// Résolution du problème
Test;

// Affichage du résultat
plot(uh,dim=3, wait=1, fill=1,value=true, nbiso=20);
